name: Build Docker Image

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  
env:
  IMAGE_NAME: citdev-codingexam

jobs:
  test:
    runs-on: [pda-self-hosted-linux]
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3
        
      - name: "Set up Python"
        uses: actions/setup-python@v2
        with:
          python-version: 3.12.2

      - name: "Show Python Version"
        run: python --version

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        continue-on-error: false

  build-dev:
    if: ${{ github.ref == 'refs/heads/develop' }}
    environment: Development
    runs-on: [pda-self-hosted-linux]
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Create docker context
        run: docker context create gha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: gha

      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure Login
        uses: azure/login@v1.5.1
        with:
          client-id: ${{ vars.AZURE_CONTAINER_REGISTRY_CLIENT_ID }}
          tenant-id: 7f90057d-3ea0-46fe-b07c-e0568627081b
          subscription-id: ${{ vars.AZURE_CONTAINER_REGISTRY_SUBSCRIPTION }}

      - name: Login to Azure Container registry
        run: az acr login -n ${{ vars.AZURE_CONTAINER_REGISTRY }}

      - name: Docker build
        run: docker build -f ./Dockerfile --pull -t ${{ vars.AZURE_CONTAINER_REGISTRY }}/repos/${{ env.IMAGE_NAME }}:latest .

      - name: Docker push
        run: docker push ${{ vars.AZURE_CONTAINER_REGISTRY }}/repos/${{ env.IMAGE_NAME }}:latest

  build-prd:
    if: ${{ github.ref == 'refs/heads/main' }}
    environment: Production
    runs-on: [pda-self-hosted-linux]
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4

      - name: Create docker context
        run: docker context create gha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: gha

      - name: Install Azure CLI
        run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure Login
        uses: azure/login@v1.5.1
        with:
          client-id: ${{ vars.AZURE_CONTAINER_REGISTRY_CLIENT_ID }}
          tenant-id: 7f90057d-3ea0-46fe-b07c-e0568627081b
          subscription-id: ${{ vars.AZURE_CONTAINER_REGISTRY_SUBSCRIPTION }}

      - name: Login to Azure Container registry
        run: az acr login -n ${{ vars.AZURE_CONTAINER_REGISTRY }}

      - name: Docker build
        run: docker build -f ./Dockerfile --pull -t ${{ vars.AZURE_CONTAINER_REGISTRY }}/repos/${{ env.IMAGE_NAME }}:latest .

      - name: Docker push
        run: docker push ${{ vars.AZURE_CONTAINER_REGISTRY }}/repos/${{ env.IMAGE_NAME }}:latest
